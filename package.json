{
  "name": "claudette",
  "version": "1.0.3",
  "description": "Enterprise AI middleware platform with intelligent routing, RAG integration, monitoring, and cost optimization",
  "main": "claudette",
  "bin": {
    "claudette": "./claudette"
  },
  "scripts": {
    "start": "node claudette",
    "server": "node dist/server/index.js",
    "start:server": "npm run build && npm run server",
    "build": "tsc",
    "test": "npm run build && node src/test/claudette-unit-tests.js",
    "test:rag": "node src/test/rag-integration-tests.js",
    "test:all": "npm run test && npm run test:rag",
    "test:kpi": "node src/test/kpi-framework.js",
    "test:quality": "node src/test/qwen-code-quality.js",
    "test:direct": "node src/test/qwen-direct.js",
    "test:fresh-system": "node src/test/integration/fresh-system-validator.js",
    "test:performance": "node src/test/regression/performance-benchmarker.js",
    "test:e2e": "node src/test/e2e/user-journey-validator.js",
    "test:analytics": "node src/test/analytics/success-rate-analytics.js",
    "test:emergency": "node src/test/validation/emergency-release-validator.js",
    "test:validation": "npm run test:validation:quick",
    "test:validation:quick": "npm run test:fresh-system && npm run test:e2e && npm run test:emergency",
    "test:validation:full": "npm run test && npm run test:rag && npm run test:fresh-system && npm run test:performance && npm run test:e2e && npm run test:analytics && npm run test:emergency",
    "test:validation:emergency": "npm run test:validation:quick --emergency",
    "dev": "tsc --watch",
    "clean": "cross-env rimraf dist",
    "validate": "tsc --noEmit",
    "prepublishOnly": "npm run clean && npm run build && npm run test:validation:full",
    "prepack": "npm run build",
    "release": "node -e \"console.log('Release script placeholder - implement with node')\"",
    "release:emergency": "node -e \"console.log('Emergency release script placeholder - implement with node')\"",
    "release:dry-run": "node -e \"console.log('Dry run release script placeholder - implement with node')\"",
    "validate:artifacts": "node -e \"console.log('Artifact validation placeholder - implement with node')\"",
    "install:script": "node -e \"console.log('Installation script placeholder - use platform-specific installers')\"",
    "install:windows": "powershell -ExecutionPolicy Bypass -File scripts/install/install-windows.ps1",
    "install:unix": "bash scripts/install/install-unix.sh",
    "setup": "node claudette init",
    "setup:quick": "node claudette init --quick",
    "setup:wizard": "node claudette setup init",
    "setup:validate": "node claudette setup validate",
    "setup-credentials": "node -e \"console.log('Use: claudette setup-credentials to configure API keys')\"",
    "lint": "echo 'Linting not configured yet'",
    "format": "echo 'Code formatting not configured yet'",
    "check": "npm run validate && npm run test",
    "ci": "npm ci && npm run build && npm run test",
    "pretest": "npm run build",
    "posttest": "echo 'Tests completed'",
    "prebuild": "npm run clean",
    "postbuild": "echo 'Build completed successfully'",
    "version": "node -p \"require('./package.json').version\"",
    "health": "node -e \"console.log('Claudette health check: OK')\"",
    "info": "node -e \"const pkg = require('./package.json'); console.log(JSON.stringify({name: pkg.name, version: pkg.version, node: process.version}, null, 2))\""
  },
  "keywords": [
    "ai-middleware",
    "backend-routing",
    "cost-optimization",
    "rag",
    "retrieval-augmented-generation",
    "monitoring",
    "observability",
    "setup-wizard",
    "claude",
    "openai",
    "qwen",
    "anthropic",
    "graphrag",
    "vector-database",
    "lightrag",
    "mcp",
    "docker",
    "enterprise-ai",
    "ml-routing",
    "predictive-analytics"
  ],
  "author": "Claudette Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RobLe3/claudette.git"
  },
  "bugs": {
    "url": "https://github.com/RobLe3/claudette/issues"
  },
  "homepage": "https://github.com/RobLe3/claudette#readme",
  "files": [
    "dist/**/*",
    "claudette",
    "README.md",
    "LICENSE"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^24.5.2",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.0",
    "shx": "^0.3.4",
    "typescript": "^5.3.0"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.63.0",
    "@types/sqlite3": "^3.1.11",
    "axios": "^1.11.0",
    "better-sqlite3": "^12.2.0",
    "chalk": "^5.4.1",
    "commander": "^14.0.1",
    "dotenv": "^17.2.2",
    "lru-cache": "^11.2.1",
    "node-fetch": "^3.3.2",
    "openai": "^5.21.0",
    "ora": "^8.2.0",
    "sqlite3": "^5.1.7"
  }
}
