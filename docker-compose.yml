version: '3.8'

services:
  claudette:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: claudette:3.0.0
    container_name: claudette-app
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PORT=3000
      # API Keys (override in .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - CUSTOM_BACKEND_1_API_KEY=${CUSTOM_BACKEND_1_API_KEY:-}
      # Backend Configuration
      - ENABLE_LIVE_BACKENDS=${ENABLE_LIVE_BACKENDS:-true}
      - ADAPTIVE_BACKEND_MANAGER=${ADAPTIVE_BACKEND_MANAGER:-true}
      # Performance Settings
      - CLAUDETTE_CACHE_TTL=${CLAUDETTE_CACHE_TTL:-3600}
      - CLAUDETTE_MAX_RETRIES=${CLAUDETTE_MAX_RETRIES:-3}
      - CLAUDETTE_TIMEOUT=${CLAUDETTE_TIMEOUT:-45000}
      # Database Configuration
      - ULTIPA_ENDPOINT=${ULTIPA_ENDPOINT:-}
      - ULTIPA_ACCESS_TOKEN=${ULTIPA_ACCESS_TOKEN:-}
    
    # Load environment from .env file
    env_file:
      - .env
    
    # Port mapping
    ports:
      - "${PORT:-3000}:3000"
    
    # Volume mounts for persistence
    volumes:
      - claudette-cache:/app/cache
      - claudette-data:/app/data
      - claudette-logs:/app/logs
      # Mount .env file if it exists
      - ./.env:/app/.env:ro
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Security context
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network
    networks:
      - claudette-network

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: claudette-redis
    restart: unless-stopped
    
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    
    # Volumes for persistence
    volumes:
      - claudette-redis:/data
    
    # Port (internal only, not exposed)
    expose:
      - "6379"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'
    
    # Security context
    security_opt:
      - no-new-privileges:true
    
    # Network
    networks:
      - claudette-network

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: claudette-prometheus
    restart: unless-stopped
    
    # Configuration
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - claudette-prometheus:/prometheus
    
    # Port mapping (optional, for monitoring)
    ports:
      - "9090:9090"
    
    # Command with proper configuration
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    
    # Network
    networks:
      - claudette-network
    
    # Only start if monitoring is enabled
    profiles:
      - monitoring

# Named volumes for data persistence
volumes:
  claudette-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/cache
  
  claudette-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/app
  
  claudette-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  claudette-redis:
    driver: local
  
  claudette-prometheus:
    driver: local

# Networks
networks:
  claudette-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16